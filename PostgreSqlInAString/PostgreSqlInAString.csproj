<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MinimumVisualStudioVersion>17.0</MinimumVisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x64\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\x64\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectTypeGuids>{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <ProjectGuid>{FC4965D9-F9AE-40D3-B09E-F9631753A676}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>PostgreSqlInAString</RootNamespace>
    <AssemblyName>PostgreSqlInAString</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <GeneratePkgDefFile>true</GeneratePkgDefFile>
    <UseCodebase>true</UseCodebase>
    <IncludeAssemblyInVSIXContainer>true</IncludeAssemblyInVSIXContainer>
    <IncludeDebugSymbolsInVSIXContainer>false</IncludeDebugSymbolsInVSIXContainer>
    <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
    <CopyBuildOutputToOutputDirectory>true</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>true</CopyOutputSymbolsToOutputDirectory>
    <StartAction>Program</StartAction>
    <StartProgram Condition="'$(DevEnvDir)' != ''">$(DevEnvDir)devenv.exe</StartProgram>
    <StartArguments>/rootsuffix Exp</StartArguments>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="ClassificationTypeName.cs" />
    <Compile Include="Lexer\PostgreSqlLexer.cs" />
    <Compile Include="Lexer\PostgreSqlLexerBase.cs" />
    <Compile Include="Lexer\TokenCategorizer.cs" />
    <Compile Include="LinqExtensions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="SqlTokenCategory.cs" />
    <Compile Include="StringType.cs" />
    <Compile Include="SqlClassificationTypeDefinitions.cs" />
    <Compile Include="PostgreSqlInAStringPackage.cs" />
    <Compile Include="SqlClassificationFormatDefinitions.cs" />
    <Compile Include="StringSqlTaggerProvider.cs" />
    <Compile Include="StringSqlTagger.cs" />
    <Compile Include="PostgreSqlInAStringConfiguration.cs" />
    <Compile Include="StringUtils.cs" />
    <Compile Include="TextEditorUtils.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Lexer\PostgreSqlLexer.g4" />
    <None Include="source.extension.vsixmanifest">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.VisualStudio.Shell.Immutable.10.0, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Antlr4.Runtime.Standard">
      <Version>4.13.1</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.SDK" Version="17.7.37357" ExcludeAssets="runtime">
      <IncludeAssets>compile; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VSSDK.BuildTools" Version="17.7.2196" />
    <PackageReference Include="Microsoft.VSSDK.Vsixsigntool">
      <Version>16.2.29116.78</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="icon.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="LICENSE.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />
  <Target Name="SignVsix" AfterTargets="CreateVsixContainer" Condition="'$(Configuration)' == 'Release' And Exists('$(OSS_CERT)') And '$(OSS_CERT_PASS)' != '' And '$(OSS_CERT_HASH)' != ''">
    <ItemGroup>
      <VsixSignPackage Include="$(NuGetPackageRoot)microsoft.vssdk.vsixsigntool\*\tools\vssdk\vsixsigntool.exe" />
    </ItemGroup>
    <PropertyGroup>
      <VsixSignTool>@(VsixSignPackage->'%(fullpath)')</VsixSignTool>
      <VsixSignCommand>$(VsixSignTool) sign /f $(OSS_CERT) /p $(OSS_CERT_PASS) /sha1 $(OSS_CERT_HASH) /fd sha256 /tr http://timestamp.digicert.com /td sha256 /v</VsixSignCommand>
      <VsixSignVerifyCommand>"$(VsixSignTool)" verify /f $(OSS_CERT) /p $(OSS_CERT_PASS) /sha1 $(OSS_CERT_HASH) /q</VsixSignVerifyCommand>
    </PropertyGroup>
    <Exec Command="$(VsixSignVerifyCommand) $(TargetVsixContainer)" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="VsixSignVerifyExitCode" />
    </Exec>
    <Message Text="Skipping file $(TargetVsixContainer) because it is already signed." Importance="high" Condition="$(VsixSignVerifyExitCode) == 0" />
    <Message Text="Signing $(TargetVsixContainer)" Importance="high" Condition="$(VsixSignVerifyExitCode) != 0" />
    <Exec Command="$(VsixSignCommand) $(TargetVsixContainer)" Condition="$(VsixSignVerifyExitCode) != 0" />
  </Target>
</Project>